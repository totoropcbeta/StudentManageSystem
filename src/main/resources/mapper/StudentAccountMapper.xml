<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.totoropcbeta.studentmanagesystem.mapper.StudentAccountMapper">
    <resultMap id="BaseResultMap" type="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="student_id" jdbcType="VARCHAR" property="studentId"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="pass_word" jdbcType="VARCHAR" property="passWord"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="valid" jdbcType="BIT" property="valid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, student_id, student_name, pass_word, phone, id_card, email, `valid`, create_time,
        update_time
    </sql>
    <select id="selectByExample"
            parameterType="com.totoropcbeta.studentmanagesystem.entity.example.StudentAccountExample"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_account
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from student_account
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample"
            parameterType="com.totoropcbeta.studentmanagesystem.entity.example.StudentAccountExample">
        delete from student_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        insert into student_account (id, student_id, student_name,
                                     pass_word, phone, id_card,
                                     email, `valid`, create_time,
                                     update_time)
        values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR},
                #{passWord,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{valid,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        insert into student_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="passWord != null">
                pass_word,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="valid != null">
                `valid`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.totoropcbeta.studentmanagesystem.entity.example.StudentAccountExample"
            resultType="java.lang.Long">
        select count(*) from student_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectOneByStudentId" parameterType="java.lang.String"
            resultType="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        select *
        from student_account
        where valid = 1
          and student_id = #{studentId}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student_account
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=VARCHAR},
            </if>
            <if test="record.studentName != null">
                student_name = #{record.studentName,jdbcType=VARCHAR},
            </if>
            <if test="record.passWord != null">
                pass_word = #{record.passWord,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.idCard != null">
                id_card = #{record.idCard,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.valid != null">
                `valid` = #{record.valid,jdbcType=BIT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student_account
        set id = #{record.id,jdbcType=INTEGER},
        student_id = #{record.studentId,jdbcType=VARCHAR},
        student_name = #{record.studentName,jdbcType=VARCHAR},
        pass_word = #{record.passWord,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        id_card = #{record.idCard,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        `valid` = #{record.valid,jdbcType=BIT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        update student_account
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                pass_word = #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                `valid` = #{valid,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.totoropcbeta.studentmanagesystem.entity.StudentAccount">
        update student_account
        set student_id   = #{studentId,jdbcType=VARCHAR},
            student_name = #{studentName,jdbcType=VARCHAR},
            pass_word    = #{passWord,jdbcType=VARCHAR},
            phone        = #{phone,jdbcType=VARCHAR},
            id_card      = #{idCard,jdbcType=VARCHAR},
            email        = #{email,jdbcType=VARCHAR},
            `valid`      = #{valid,jdbcType=BIT},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>